{"ast":null,"code":"/*import * as actionTypes from \"../constants/productConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const getProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_PRODUCTS_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/products\");\r\n\r\n    dispatch({\r\n      type: actionTypes.GET_PRODUCTS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: actionTypes.GET_PRODUCTS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_PRODUCT_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({\r\n      type: actionTypes.GET_PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: actionTypes.GET_PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const removeProductDetails = () => (dispatch) => {\r\n  dispatch({ type: actionTypes.GET_PRODUCT_DETAILS_RESET });\r\n};*/","map":{"version":3,"sources":["C:/Users/Wiem Jaballah/Desktop/shopping-carte-wiem/frontend/src/redux/actions/productActions.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/*import * as actionTypes from \"../constants/productConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const getProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_PRODUCTS_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/products\");\r\n\r\n    dispatch({\r\n      type: actionTypes.GET_PRODUCTS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: actionTypes.GET_PRODUCTS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_PRODUCT_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({\r\n      type: actionTypes.GET_PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: actionTypes.GET_PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const removeProductDetails = () => (dispatch) => {\r\n  dispatch({ type: actionTypes.GET_PRODUCT_DETAILS_RESET });\r\n};*/"]},"metadata":{},"sourceType":"module"}