{"ast":null,"code":"/*import \"./ProductScreen.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\n// Actions\r\nimport { getProductDetails } from \"../redux/actions/productActions\";\r\nimport { addToCart } from \"../redux/actions/cartActions\";\r\n\r\nconst ProductScreen = ({ match, history }) => {\r\n  const [qty, setQty] = useState(1);\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.getProductDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  useEffect(() => {\r\n    if (product && match.params.id !== product._id) {\r\n      dispatch(getProductDetails(match.params.id));\r\n    }\r\n  }, [dispatch, match, product]);\r\n\r\n  const addToCartHandler = () => {\r\n    dispatch(addToCart(product._id, qty));\r\n    history.push(`/cart`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"productscreen\">\r\n      {loading ? (\r\n        <h2>Loading...</h2>\r\n      ) : error ? (\r\n        <h2>{error}</h2>\r\n      ) : (\r\n        <>\r\n          <div className=\"productscreen__left\">\r\n            <div className=\"left__image\">\r\n              <img src={product.imageUrl} alt={product.name} />\r\n            </div>\r\n            <div className=\"left__info\">\r\n              <p className=\"left__name\">{product.name}</p>\r\n              <p>Price: ${product.price}</p>\r\n              <p>Description: {product.description}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"productscreen__right\">\r\n            <div className=\"right__info\">\r\n              <p>\r\n                Price:\r\n                <span>${product.price}</span>\r\n              </p>\r\n              <p>\r\n                Status:\r\n                <span>\r\n                  {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                </span>\r\n              </p>\r\n              <p>\r\n                Qty\r\n                <select value={qty} onChange={(e) => setQty(e.target.value)}>\r\n                  {[...Array(product.countInStock).keys()].map((x) => (\r\n                    <option key={x + 1} value={x + 1}>\r\n                      {x + 1}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </p>\r\n              <p>\r\n                <button type=\"button\" onClick={addToCartHandler}>\r\n                  Add To Cart\r\n                </button>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;*/","map":{"version":3,"sources":["C:/Users/Wiem Jaballah/Desktop/shopping-carte-wiem/frontend/src/screens/ProductScreen.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/*import \"./ProductScreen.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\n// Actions\r\nimport { getProductDetails } from \"../redux/actions/productActions\";\r\nimport { addToCart } from \"../redux/actions/cartActions\";\r\n\r\nconst ProductScreen = ({ match, history }) => {\r\n  const [qty, setQty] = useState(1);\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.getProductDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  useEffect(() => {\r\n    if (product && match.params.id !== product._id) {\r\n      dispatch(getProductDetails(match.params.id));\r\n    }\r\n  }, [dispatch, match, product]);\r\n\r\n  const addToCartHandler = () => {\r\n    dispatch(addToCart(product._id, qty));\r\n    history.push(`/cart`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"productscreen\">\r\n      {loading ? (\r\n        <h2>Loading...</h2>\r\n      ) : error ? (\r\n        <h2>{error}</h2>\r\n      ) : (\r\n        <>\r\n          <div className=\"productscreen__left\">\r\n            <div className=\"left__image\">\r\n              <img src={product.imageUrl} alt={product.name} />\r\n            </div>\r\n            <div className=\"left__info\">\r\n              <p className=\"left__name\">{product.name}</p>\r\n              <p>Price: ${product.price}</p>\r\n              <p>Description: {product.description}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"productscreen__right\">\r\n            <div className=\"right__info\">\r\n              <p>\r\n                Price:\r\n                <span>${product.price}</span>\r\n              </p>\r\n              <p>\r\n                Status:\r\n                <span>\r\n                  {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                </span>\r\n              </p>\r\n              <p>\r\n                Qty\r\n                <select value={qty} onChange={(e) => setQty(e.target.value)}>\r\n                  {[...Array(product.countInStock).keys()].map((x) => (\r\n                    <option key={x + 1} value={x + 1}>\r\n                      {x + 1}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </p>\r\n              <p>\r\n                <button type=\"button\" onClick={addToCartHandler}>\r\n                  Add To Cart\r\n                </button>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;*/"]},"metadata":{},"sourceType":"module"}